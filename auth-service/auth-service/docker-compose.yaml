services:
  postgres:
    image: postgres
    container_name: postgres_container
    environment:
      POSTGRES_USER: saad
      POSTGRES_PASSWORD: "123"
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - postgres

  auth-service:
    build:
      dockerfile: Dockerfile
    container_name: auth_service_container
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - postgres
    restart: unless-stopped

  manufacturer-service:
    image: manufacturer-service
    build:
      context: C:\Users\Abdul\Desktop\Mic\new_Archetecture\working_services\manufacturer-service\manufacturer-service
      dockerfile: Dockerfile
    container_name: manufacturer_service_container2
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    networks:
      - postgres
    restart: unless-stopped

  product-service:
    build:
      context: C:\Users\Abdul\Desktop\Mic\new_Archetecture\working_services\product-service\product-service
      dockerfile: Dockerfile
    container_name: product_service_container
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    networks:
      - postgres
    restart: unless-stopped

  service-registry:
    image: service-registry
    build:
      context: C:\Users\Abdul\Desktop\Mic\new_Archetecture\working_services\service-registry\service-registry
      dockerfile: Dockerfile
    container_name: service_registry_container
    ports:
      - "8761:8761"
    networks:
      - postgres
    restart: unless-stopped


  gateway-service:
    image: gateway-service
    build:
      context: C:\Users\Abdul\Desktop\Mic\new_Archetecture\working_services\gateway_service\gateway-service
      dockerfile: Dockerfile
    container_name: gateway_service_container
    ports:
      - "8085:8085"
    networks:
      - postgres
    restart: unless-stopped

  config-server:
    image: config-server
    build:
      context: C:\Users\Abdul\Desktop\Mic\new_Archetecture\working_services\config_server\config_server
      dockerfile: Dockerfile
    container_name: config_server_container
    ports:
      - "8084:8084"
    networks:
      - postgres
    restart: unless-stopped

volumes:
  postgres:
  pgadmin:

networks:
  postgres:
